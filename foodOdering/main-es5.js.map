{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/food.model.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/order.model.ts","webpack:///src/app/order/order.component.ts","webpack:///src/app/order/order.component.html","webpack:///src/app/service/fetch.service.ts","webpack:///src/app/service/login-signup.service.ts","webpack:///src/app/service/order-service.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CartComponent","orderService","orders","totalprice","getTotalPrice","onGetOrder","alert","createAlert","Food","HomeComponent","router","logout","sessionStorage","getItem","navigate","name","onLogout","onLogOut","LoginComponent","logIn","email","password","invalid","formData","FormData","append","onLogin","subscribe","res","setItem","onSubmit","MenuComponent","fetchFood","food","onFetch","OrderItems","OrderComponent","total","size","quantity","calculatePrice","srcElement","value","foodItem","order","foodname","price","onAddOrder","console","log","addOrder","onSizeChange","less","more","FetchService","http","baseurl","get","providedIn","LoginSignupService","form","post","OrderServiceService","flag","elmnt","push","SignupComponent","signUp","route","onSignUp","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { CartComponent } from './cart/cart.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  {path : \"signup\" , component: SignupComponent },\n  {path : \"login\" , component: LoginComponent },\n  {path : \"home\" , component: HomeComponent , children:[\n    {path:\"\" , pathMatch:\"full\" , redirectTo:\"menu\"},\n    {path: \"menu\" , component: MenuComponent },\n    {path: \"cart\" , component: CartComponent }\n  ]},\n  {path: \"\" , pathMatch: \"full\" , redirectTo:\"home\"},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'foodOdering';\n}\n","<!--<app-login></app-login>-->\n<!--<app-home></app-home>\n<!--<app-menu></app-menu>-->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { MenuComponent } from './menu/menu.component';\nimport { CartComponent } from './cart/cart.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Food } from './food.model';\nimport { OrderComponent } from './order/order.component';\nimport { OrderItems } from './order.model';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    MenuComponent,\n    CartComponent,\n    SignupComponent,\n    OrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [Food,OrderItems],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { OrderServiceService } from '../service/order-service.service';\nimport { OrderItems } from '../order.model';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n  totalprice:number;\n  constructor(private orderService:OrderServiceService) { }\n  orders:OrderItems[]=[];\n  ngOnInit(): void {\n    this.totalprice=this.orderService.getTotalPrice();\n    this.orders=this.orderService.onGetOrder();\n  }\n  createAlert(){\n    alert(\"Program ends here. Thank You! 😊\")\n  }\n}\n","<div>\n    <ul>\n        <li *ngFor=\"let order of orders\">\n            {{order.foodname}} - {{order.size}}&nbsp;&nbsp; X &nbsp;&nbsp;{{order.quantity}} &nbsp; &nbsp; : &nbsp; &nbsp; {{order.price}}\n        </li>\n        <hr>\n        <span>Total= Rs.{{totalprice}}</span>\n        <span *ngIf=\"totalprice==0\">Please add items in the card.</span>\n    </ul>\n    <button (click)=\"createAlert()\">Proceed to Pay</button>\n</div>\n\n\n","export class Food{\r\n    id:number;\r\n    foodname: string;\r\n    image: string;\r\n    small: number;\r\n    medium: number;\r\n    large: number;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginSignupService } from '../service/login-signup.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  name:string;\n\n  constructor(private router:Router, private logout:LoginSignupService) { }\n\n  ngOnInit(): void {\n    if(sessionStorage.getItem('loggedIn') !== 'true'){\n      this.router.navigate(['/login']);\n    }\n    else{\n      this.name=sessionStorage.getItem('name');\n    }\n  }\n  onLogOut(){\n    this.logout.onLogout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav>\n    <h2>Food Plaza</h2>\n    <input type=\"submit\" name=\"submit\" (click)=\"onLogOut()\" value=\"Log Out\">\n</nav>\n<div>\n    <span>Welcome {{name | titlecase}} </span>\n    <div class=\"buttons\">\n        <span><img src=\"assets/icons/cart.svg\" alt=\"\" routerLinkActive=\"active\"  routerLink=\"cart\"></span>\n        <span><img src=\"assets/icons/home.svg\"  routerLinkActive=\"active\" routerLink=\"/home/menu\"></span>\n    </div>\n</div>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { LoginSignupService } from '../service/login-signup.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  email: string=\"\";\n  password: string=\"\";\n  invalid:boolean;\n  constructor(private logIn: LoginSignupService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.invalid= false;\n  }\n\n  onSubmit(){\n    let formData = new FormData();\n    formData.append('email',this.email);\n    formData.append('password',this.password);\n    formData.append('login', 'true');\n\n    this.logIn.onLogin(formData).subscribe(res => {\n      if(res['status']==='error'){\n        this.invalid=true;\n      }\n      else{\n        sessionStorage.setItem('name', res['name']);\n        sessionStorage.setItem('email', res['email']);\n        sessionStorage.setItem('loggedIn','true');\n        this.router.navigate(['/home']);\n      }\n    })\n  }\n}\n","<form (submit)=\"onSubmit()\">\n    <h1>LOGIN</h1>\n    <br>\n    <div *ngIf=\"invalid\">\n        <small style=\"color: firebrick; text-align: center;\">Invalid Credentials!</small>\n    </div>\n    <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" required [(ngModel)]=\"email\">\n    <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" required [(ngModel)]=\"password\">\n    <input type=\"submit\" name=\"submit\" value=\"Login\" [disabled]=\"email === '' || password ===''\">\n    <br>\n    <small>Already have an account? <a routerLink=\"/signup\">Signup Here.</a></small>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Food } from '../food.model';\nimport { FetchService } from '../service/fetch.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  food: Food[]=[];\n  constructor(private fetchFood: FetchService) { }\n\n  ngOnInit(): void {\n    \n    this.fetchFood.onFetch().subscribe((res:Food[]) => {\n      this.food = res;\n    })\n  }\n}\n","<div class=\"menu\"><h2>MENU</h2></div>\n<div class=\"f\"><a routerLink=\"/home/cart\">Checkout</a></div>\n<div class=\"row\">\n    <app-order *ngFor=\"let foodItem of food\" [foodItem]=\"foodItem\"></app-order>\n</div>","export class OrderItems{\r\n    foodname:string;\r\n    quantity:number;\r\n    size:string;\r\n    price:number;\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Food } from '../food.model';\nimport { OrderServiceService } from '../service/order-service.service';\nimport { OrderItems } from '../order.model';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss']\n})\nexport class OrderComponent implements OnInit {\n  size: string;\n  quantity: number;\n  total:number = null;\n  @Input('foodItem') foodItem:Food;\n  constructor(private orderService: OrderServiceService) { }\n\n  ngOnInit(): void {\n    this.size=\"\"\n    this.quantity=0\n  }\n  less(){\n    if (this.quantity>0){\n      this.quantity--;\n    }\n    this.calculatePrice()\n  }\n  more(){\n    this.quantity++;\n    this.calculatePrice()\n  }\n  onSizeChange(size){\n    this.size=size.srcElement.value;\n    this.calculatePrice()\n  }\n  calculatePrice(){\n    this.total = this.quantity * this.foodItem[this.size];\n  }\n  addOrder(){\n    let order = new OrderItems();\n    order.size = this.size\n    order.foodname = this.foodItem.foodname\n    order.quantity = this.quantity\n    order.price = this.total\n\n    this.orderService.onAddOrder(order);\n    console.log(this.orderService.onGetOrder())\n  }\n}\n","<div class=\"order\">\n    <img [src]=\"foodItem.image\" [alt]=\"foodItem.foodname\">\n    <h3>{{foodItem.foodname}}</h3>\n    <form (submit)=\"addOrder()\">\n        <select name=\"size\" required (change)=\"onSizeChange($event)\">\n            <option value=\"\" disabled selected>Select Size</option>\n            <option value=\"small\">Small</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"large\">Large</option>\n        </select>\n        <div class=\"quantity\">\n            <input type=\"button\" name=\"add\" value=\"-\" (click)=\"less()\">\n            <span>{{quantity}}</span>\n            <input type=\"button\" name=\"add\" value=\"+\" (click)=\"more()\">\n        </div>\n        <input type=\"submit\" name=\"cart\" value=\"Add {{ size!== '' && quantity > 0 ? 'Rs.'+total : ''}}\" [disabled]=\"(size === '' || quantity<=0)\">\n    </form>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FetchService {\n  baseurl=\"http://localhost/foodOrdering/index.php\"\n  constructor(private http: HttpClient) { }\n\n  onFetch(){\n    return this.http.get(this.baseurl+'?fetch=1');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginSignupService {\n\n  baseurl=\"http://localhost/foodOrdering/index.php\"\n  constructor(private http:HttpClient) { }\n\n  onLogin(form:FormData){\n    return this.http.post(this.baseurl, form);\n  }\n\n  onSignUp(form:FormData){\n    return this.http.post(this.baseurl, form);\n  }\n\n  onLogout(){\n    sessionStorage.setItem('loggedIn','false');\n    sessionStorage.setItem('name', null);\n    sessionStorage.setItem('email' , null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OrderItems } from '../order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderServiceService {\n  orders:OrderItems[] = [];\n\n  constructor() { }\n  \n  onAddOrder(order:OrderItems){\n    let flag = false;\n    for (const elmnt of this.orders) {\n      if(elmnt.foodname === order.foodname && elmnt.size === order.size){\n        elmnt.price = order.price;\n        elmnt.quantity = order.quantity;\n        flag = true;\n        break;\n      }\n    }\n    if(!flag){\n      this.orders.push(order)\n    }\n  }\n  \n  onGetOrder(){\n    return this.orders\n  }\n\n  getTotalPrice(){\n    let totalprice:number=0;\n    for(let order of this.orders){\n      totalprice += order.price;\n    }\n    return totalprice;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginSignupService } from '../service/login-signup.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  name: string='';\n  password: string='';\n  email: string='';\n  invalid: boolean;\n  constructor(private signUp:LoginSignupService, private route:Router) { }\n\n  ngOnInit(): void {\n    this.invalid=false;\n  }\n  onSubmit(){\n    let formData = new FormData();\n    formData.append('name',this.name);\n    formData.append('email',this.email);\n    formData.append('password',this.password);\n    formData.append('signup','true');\n    this.signUp.onSignUp(formData).subscribe(res => {\n      if(res['status'] === 'error'){\n        this.invalid=true;\n      }\n      else{\n        this.route.navigate(['/login']);\n      }\n    })\n  }\n}\n","<form (submit)=\"onSubmit()\">\n    <h1>CREATE USER</h1>\n    <br>\n    <div *ngIf=\"invalid\">\n        <small style=\"color: firebrick; text-align: center;\">Email id Already exists!</small>\n    </div>\n    <input type=\"text\" name=\"name\" placeholder=\"Enter Name\" required [(ngModel)]=\"name\">\n    <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" required [(ngModel)]=\"email\">\n    <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" required [(ngModel)]=\"password\">\n    <input type=\"submit\" value=\"Create\" name=\"create\">\n    <br>\n    <small>Already have an account? <a routerLink=\"/login\">Login Here.</a></small>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}